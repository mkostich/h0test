% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{f.new_config}
\alias{f.new_config}
\title{Get configuration template with mix of defaults and example values.}
\usage{
f.new_config()
}
\value{
list of configuration values
}
\description{
Returns a configuration list filled with defaults and
    example values. Configuration meant to be customized then passed to
    other functions.
}
\details{
This function is meant to simplify generation of configurations for 
    higher level functions, like \code{h0testr::run()}, 
    \code{h0testr::tune()}, or \code{h0testr::save_state()}. For most 
    other functions, you can pass a simpler config as a list containing
    only the needed parameters. See documentation and examples for the 
    function of interest for the minimal configuration needed.
  For hypothesis testing or calls to \code{h0testr::f.initialize()}, 
    customize \code{frm}, \code{test_term}, and \code{sample_factors}.
  When using the config to load data from files (e.g. by calling 
    \code{h0testr::load_data(config)}), calling 
    \code{h0testr::f.initialize()}, or for aggregating multiple 
    observations per sample (e.g. by calling \code{h0testr::combine_reps()}),
    or for aggregating precursors into gene/protein groups (e.g. by calling 
    \code{h0testr::combine_precursors()}), you should customize 
    \code{feat_id_col}, \code{gene_id_col}, \code{sample_id_col}, 
    and \code{obs_id_col}. In these cases, leave \code{feat_col} and
    \code{obs_col} as \code{""} (they will be automatically set and 
    changed after observation or precursor aggregation.
  Otherwise, you may only need to set \code{feat_col} and \code{obs_col}. 
    see examples for the function of interest to see what is needed.
}
\examples{
config <- f.new_config()    ## all possible settings with defaults
str(config)                 ## check out the default settings

## you MUST customize frm, test_term, and sample_factors:
config$frm <- ~ age + sex + age:sex
config$test_term <- "age:sex"
config$sample_factors <- list(age=c("young", "old"), sex=c("female", "male"))

## these may or may not need customization, depending on your file formats:
config$feat_id_col <- "peptide_id"
config$gene_id_col <- "gene_id"
config$sample_id_col <- "sample"
config$obs_id_col <- "observation"

str(config)
f.report_config(config)
}
