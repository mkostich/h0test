% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize.R
\name{f.normalize_qquantile}
\alias{f.normalize_qquantile}
\title{Old-school 'quantile' normalization.}
\usage{
f.normalize_qquantile(state, config)
}
\arguments{
\item{state}{List with elements formatted like the list returned by \code{f.read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values.}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Normalize expression values using the 'quantile normalization' algorithm.
}
\details{
Inter-observation normalization resulting in nearly identical
    signal distributions across all samples, so all quantiles in \code{0:1} match
    across all samples. Calls \code{limma::normalizeQuantiles()} under the hood.
}
\examples{
  \dontrun{
    state <- list(expression=exprs)
    config <- list(log_file="")
    state <- f.normalize_qquantile(state, config)
    norm_exprs <- state$expression
  }
}
