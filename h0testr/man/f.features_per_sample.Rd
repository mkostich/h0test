% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{f.features_per_sample}
\alias{f.features_per_sample}
\title{Numer of expressed features per sample}
\usage{
f.features_per_sample(state, config)
}
\arguments{
\item{state}{A list with elements like that returned by `f.read_data()`:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{log_file}       \cr \tab Path to log file (character); \code{log_file=""} outputs to console.
}}
}
\value{
A numeric vector of length \code{ncol(state$expression)} with 
  number of features expressed in each sample.
}
\description{
Calculates the number of expressed features in each sample.
}
\details{
Features are considered to be expressed if \code{state$expression > 0}; 
    \code{NA}s count as no expression.
}
\examples{
set.seed(101)
exprs <- h0testr::f.sim1(n_obs=6, n_feats=12)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(log_file="")
h0testr::f.features_per_sample(state, config)
}
