% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filter_features_by_formula}
\alias{filter_features_by_formula}
\title{Filter features without enough distinct values for each marginal term in \code{config$frm}.}
\usage{
filter_features_by_formula(
  state,
  config,
  n_non_na_min = 2,
  n_distinct_min = 2,
  n_groups_non_na_min = 2,
  n_groups_distinct_min = 1
)
}
\arguments{
\item{state}{A list with elements like that returned by \code{read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{frm} \cr \tab Formula object specifying model to be fitted. \cr
}}

\item{n_non_na_min}{Minimum number of non-NA values per feature. Non-negative integer.}

\item{n_distinct_min}{Minimum number of distinct non-NA values per feature. Non-negative integer.}

\item{n_groups_non_na_min}{Minimum number of treatment levels meeting \code{n_non_na_min}. Non-negative integer.}

\item{n_groups_distinct_min}{Minimum number of treatment levels meeting \code{n_distinct_min}. Non-negative integer.}
}
\value{
An updated \code{state} list with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Filter features without enough distinct values for each marginal term in \code{config$frm}.
}
\details{
Feature considered expressed if \code{state$expression > 0}; 
    \code{NA}s count as no expression. For continuous predictors (independent variables),
    number of levels corresponds to number of distinct values.
}
\examples{
set.seed(101)
exprs <- h0testr::sim1(n_obs=6, n_feats=12, mcar_p=0.5)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs), age=c(rep(4, 3), rep(12, 3)))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(frm=~age)
state2 <- h0testr::filter_features_by_formula(state, config)
print(state)
print(state2)
}
