% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{add_filter_stats}
\alias{add_filter_stats}
\title{Add filter statistics}
\usage{
add_filter_stats(state, config)
}
\arguments{
\item{state}{List with elements formatted like the list returned by \code{read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Requires the following keys:
\tabular{ll}{
  \code{feat_col}  \cr \tab Name of column (character) in \code{feature_file_in} that corresponds to rows of \code{data_file_in}. \cr
  \code{obs_col}   \cr \tab Name of column (character) in \code{sample_file_in} that corresponds to columns of \code{expression}. \cr
}}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Adds filtering-related statistics to \code{state$features}, 
    and \code{state$samples}.
}
\details{
Wrapper for \code{samples_per_feature()}, \code{feature_median_expression()}, 
    \code{features_per_sample()}. Also reports quantiles of distributions. 
  See documentation for \code{h0testr::new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
exprs <- h0testr::sim1(n_obs=6, n_feats=8)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- h0testr::new_config()      ## defaults
config$save_state <- FALSE             ## default is TRUE
config$feat_col <- config$feat_id_col
config$obs_col <- config$obs_id_col
state <- h0testr::add_filter_stats(state, config)
print(state)
}
