% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize.R
\name{normalize_mscoreutils}
\alias{normalize_mscoreutils}
\title{Normalize expression data using \code{MsCoreUtils} package}
\usage{
normalize_mscoreutils(state, config, method = NULL)
}
\arguments{
\item{state}{List with elements like those returned by \code{read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. The only optional setting used is
\code{norm_method}, which is used to set \code{method} if \code{is.null(method)}.}

\item{method}{Name (character scalar) of method to use for normalization. See details.}
}
\value{
A list with elements: 
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with normalized expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Normalization using the \code{MsCoreUtils::normalize_matrix()} function.
}
\details{
Uses the \code{MsCoreUtils::normalize_matrix()} function to normalize
    expression data in \code{state$expression}. Does not affect 
    \code{state$features} or \code{state$samples}. Potential values 
    for \code{method} are restricted to those that always yield non-negative 
    values from non-negative inputs. Also excluded 
    \code{c("vsn", "quantiles")} because already available elsewhere 
    (as \code{h0testr::normalize_vsn()} and 
    \code{h0testr::normalize_qquantile()}). 
    Acceptable \code{method} values include:
      \code{c("sum", "max", "div.mean", "div.median", "quantiles.robust")}.
  See documentation for \code{MsCoreUtils::normalize_matrix()} for details of each method.
  See documentation for \code{h0testr::new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
set.seed(101)
exprs <- h0testr::sim1(n_obs=6, n_feats=12, mnar_c0=-Inf)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list()
state2 <- h0testr::normalize_mscoreutils(state, config, method="quantiles.robust")
print(state$expression)
print(state2$expression)

## afterwards, quantiles more similar across observations:
apply(state$expression, 2, quantile, probs=c(0.1, 0.25, 0.5, 0.75, 0.9), na.rm=TRUE)
apply(state2$expression, 2, quantile, probs=c(0.1, 0.25, 0.5, 0.75, 0.9), na.rm=TRUE)
}
