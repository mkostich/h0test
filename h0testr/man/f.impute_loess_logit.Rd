% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.R
\name{f.impute_loess_logit}
\alias{f.impute_loess_logit}
\title{Impute by drawing from \code{p(missing|intensity)} estimated with loess.}
\usage{
f.impute_loess_logit(
  state,
  config,
  span = NULL,
  n_pts = NULL,
  off = 0.1,
  f_mid = stats::median,
  degree = 1,
  fam = "symmetric"
)
}
\arguments{
\item{state}{A list with elements like that returned by \code{f.read_data()}:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  } 
It is assumed that state$expression has been previously \code{log2(x+1)} transformed.}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{impute_n_pts}  \cr \tab Numeric greater than one. Determines granularity of imputation. Larger values lead to finer grain.
  \code{impute_span}   \cr \tab Span (numeric between zero and 1) for \code{loess} fit.
}}

\item{span}{Span for loess fit. Scalar with \code{0 < span < 1}. Default: \code{0.5}.}

\item{n_pts}{Numeric greater than one. Granularity of prediction 
grid. Larger values lead to less chance of duplicate imputed values.
Larger values require more compute time and memory. Default: \code{1e7}.}

\item{off}{Numeric offset for calculating 
\code{p.missing = (n.missing + off) / (n.total + off)}.}

\item{f_mid}{Function to use for calculating central tendency of 
feature expression across samples.}

\item{degree}{Numeric in set \code{c(1, 2)}. Degree for loess fit.}

\item{fam}{Character in set \code{c("symmetric", "gaussian")}. Family 
for \code{loess} fit.}
}
\value{
An updated \code{state} list with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Impute missing values by randomly drawing from an estimated density 
    of \code{p(missing|intensity)}.
}
\details{
Impute random draws by drawing from the estimated density of 
    \code{p(missing|intensity)}. Estimates \code{p(missing|intensity)} using 
    a loess fit with form \code{log(p_missing/p_found) ~ intensity}, where 
    intensity is assumed to be previously log transformed. If you want 
    \code{0} to be considered missing, and have \code{0} in the data, do 
    something like \code{exprs[exprs \%in\% 0] <- NA} prior to imputing. 
  See documentation for \code{h0testr::f.new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
set.seed(101)
exprs <- h0testr::f.sim1(n_obs=6, n_feats=25)$mat
exprs <- log2(exprs + 1)
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(impute_n_pts=1e7, impute_span=0.5)
state2 <- h0testr::f.impute_loess_logit(state, config)
summary(c(state$expression))     ## note number of NAs
summary(c(state2$expression))    ## note number of NAs
head(state$expression)
round(head(state2$expression))
}
