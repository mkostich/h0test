% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{f.filter_features}
\alias{f.filter_features}
\title{Filter features based on number of samples}
\usage{
f.filter_features(state, config, n_samples_min = NULL)
}
\arguments{
\item{state}{A list with elements like that returned by \code{f.read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{n_samples_min} \cr \tab Minimum number (non-negative numeric) of samples expressing feature to keep feature. \cr
}}

\item{n_samples_min}{Minimum number of samples expressing feature. Non-negative numeric.}
}
\value{
An updated \code{state} list with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Filter features based on number of samples expressing feature.
}
\details{
Feature considered expressed if \code{state$expression > 0}; 
  \code{NA}s count as no expression.
  See documentation for \code{h0testr::f.new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
set.seed(101)
exprs <- h0testr::f.sim1(n_obs=6, n_feats=12, mcar_p=0.5)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(n_samples_min=3)
state2 <- h0testr::f.filter_features(state, config)
print(state)
print(state2)
}
