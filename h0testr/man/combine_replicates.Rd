% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.R
\name{combine_replicates}
\alias{combine_replicates}
\title{Combine replicate observations}
\usage{
combine_replicates(state, config)
}
\arguments{
\item{state}{List with elements formatted like the list returned by 
\code{read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{feat_col}        \cr \tab Name of column in \code{state$features} matching \code{rownames(state$expression)}. \cr
  \code{obs_id_col}      \cr \tab Name of column in \code{state$samples} matching \code{colnames(state$expression)}. \cr
  \code{sample_id_col}   \cr \tab Name of column in \code{state$samples} with unique sample (case) ids. \cr
  \code{save_state}      \cr \tab Logical scalar indicating whether to save new state to disk. \cr
  \code{dir_out}         \cr \tab Output directory path (scalar character); only needed if \code{save_state == TRUE}. \cr
  \code{data_mid_out}    \cr \tab Midfix of expression matrix filename; only needed if \code{save_state == TRUE}.\cr
  \code{feature_mid_out} \cr \tab Midfix of feature metadata filename; only needed if \code{save_state == TRUE}.\cr
  \code{sample_mid_out}  \cr \tab Midfix of sample metadata filename; only needed if \code{save_state == TRUE}.\cr
  \code{suffix_out}      \cr \tab Suffix of output files; only needed if \code{save_state == TRUE}.\cr
}}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Combine expression signals from replicate observations, such as technical replicates.
}
\details{
Combines signals for each feature across technical replicates by taking median.
  Deletes \code{state$samples[, config$obs_id_col} if not same as 
    \code{config$sample_id_col}.
  Sets \code{config$obs_col} and \code{config$obs_id_col} to 
    \code{config$sample_id_col}.
  See documentation for \code{h0testr::new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
set.seed(101)
exprs <- h0testr::sim1(n_obs=6, n_feats=8)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
samps$sample_id=c("samp1", "samp1", "samp2", "samp2", "samp3", "samp3")
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(feat_col="feature_id", obs_id_col="observation_id", sample_id_col="sample_id", save_state=FALSE)
out <- h0testr::combine_replicates(state, config)
print(state)
print(out$state)
str(config)
str(out$config)
}
