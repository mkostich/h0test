% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize.R
\name{f.preprocess_covariates}
\alias{f.preprocess_covariates}
\title{Preprocess covariates}
\usage{
f.preprocess_covariates(state, config)
}
\arguments{
\item{state}{List with elements formatted like the list returned by `f.read_data()`:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values.}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
`f.preprocess_covariates` checks covariates referred to in
  `config$frm` are in `state$samples`, subsets only the needed
  variables into `state$samples`, and sets covariate factor 
  levels according to `config$sample_factors`.
}
\details{
Wrapper for `f.check_covariates()`, then `f.subset_covariates()`, 
    followed by `f.set_covariate_factor_levels()`.
}
\examples{
  \dontrun{
    state <- list(expression=exprs, features=feats, samples=samps)
    config <- list(
      feat_id_col="gene_id", 
      sample_factors=list(age=c("Young", "Old"), gender=c("Male", "Female")),
      obs_col="observation_id",
      sample_col="sample_id",
      log_file=""
    )
    state <- f.preprocess_covariates(state, config)
    exprs <- state$expression
    feats <- state$features
    samps <- state$samples
  }
}
