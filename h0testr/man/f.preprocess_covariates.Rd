% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize.R
\name{f.preprocess_covariates}
\alias{f.preprocess_covariates}
\title{Preprocess covariates}
\usage{
f.preprocess_covariates(state, config, initialized = F)
}
\arguments{
\item{state}{List with elements formatted like the list returned by \code{f.read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Requires the following keys:
\tabular{ll}{
  \code{sample_factors}  \cr \tab List specifying levels of factor variables in \code{config$frm} (see examples). \cr
  \code{feat_id_col}     \cr \tab Name of column (character) in \code{feature_file_in} that corresponds to rows of \code{data_file_in}. \cr
  \code{obs_id_col}      \cr \tab Name of column (character) in \code{sample_file_in} that corresponds to columns of \code{data_file_in}. \cr
  \code{sample_id_col}   \cr \tab Name of column (character) in \code{sample_file_in} with unique sample labels. \cr
}}

\item{initialized}{Logical scalar indicating if \code{state} has already has filter statistics initialized.}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Check covariates referred to in
    \code{config$frm} are in \code{state$samples}, subsets only the needed
    variables into \code{state$samples}, and sets covariate factor 
    levels according to \code{config$sample_factors}.
}
\details{
Wrapper for \code{f.check_covariates()}, then \code{f.subset_covariates()}, 
    followed by \code{f.set_covariate_factor_levels()}. If \code{initialized=FALSE}, 
    then checks if \code{state$features} has columns with names in 
    \code{c(config$n_samples_expr_col, config$median_raw_col)}; and if 
    \code{state$samples} has a column named \code{config$n_features_expr_col}. If either
    is \code{TRUE}, results in error.
}
\examples{
exprs <- h0testr::f.sim1(n_obs=6, n_feats=12)$mat
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs), 
  condition=c(rep("ctl", 3), rep("trt", 3)))
state <- list(expression=exprs, features=feats, samples=samps)
config <- h0testr::f.new_config()
config$feat_id_col <- "feature_id"
config$obs_id_col <- "observation_id"
config$sample_id_col <- "observation_id"
config$frm <- ~condition
config$test_term <- "condition"
config$sample_factors=list(condition=c("ctl", "trt"))
out <- h0testr::f.preprocess_covariates(state, config)
print(out)
}
