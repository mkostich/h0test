% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{f.sim2}
\alias{f.sim2}
\title{Simulate a two-condition dataset}
\usage{
f.sim2(
  n_samps1,
  n_samps2,
  n_genes,
  n_genes_signif,
  fold_change = 0.5,
  peps_per_gene = 1,
  reps_per_sample = 1,
  cv_reps = 0.1,
  log_m_mean = 11,
  log_m_sd = 2.7,
  log_cv_mean = -0.75,
  log_cv_sd = 0.5,
  mnar_c0 = 4.65,
  mnar_c1 = -0.5,
  mnar_off = 1e-04,
  mcar_p = 0.002
)
}
\arguments{
\item{n_samps1}{Scalar number of samples to simulate for condition1, with \code{n_samps1 >= 1}.}

\item{n_samps2}{Scalar number of samples to simulate for condition2, with \code{n_samps2 >= 1}.}

\item{n_genes}{Scalar number of gene groups to simulate, with \code{n_genes >= 2}.}

\item{n_genes_signif}{Number of significant (affected) genes. Scalar numeric, 
with \code{0 <= n_genes_signif <= n_genes}.}

\item{fold_change}{Fold change for \code{n_sig} features. Scalar numeric.}

\item{peps_per_gene}{Number of peptides to simulate per gene.}

\item{reps_per_sample}{Number of technical replicates to simulate per sample.}

\item{cv_reps}{Coeffient of variation between technical replicates.}

\item{log_m_mean}{Mean of feature means. Scalar numeric, 
with \code{log_m_mean > 0}.}

\item{log_m_sd}{Standard deviation of feature means around 
\code{log_m_mean}. Scalar numeric, with \code{log_m_sd > 0}.}

\item{log_cv_mean}{Mean coefficient of variation of features around respective 
feature means. Scalar numeric, with \code{log_cv_mean > 0}.}

\item{log_cv_sd}{Standard deviation of coefficient of variation of features 
around respective feature means. Scalar numeric, with \code{log_cv_sd > 0}.}

\item{mnar_c0}{Intercept of logistic fit of \code{p(mnar|log(intensity))}. 
Scalar numeric.}

\item{mnar_c1}{Slope of logistic fit of \code{p(mnar|log(intensity))}. 
Scalar numeric.}

\item{mnar_off}{Offset for taking logit of \code{p(mnar|log(intensity))}. 
Scalar numeric, with \code{0 < mnar_off < 1}.}

\item{mcar_p}{Probability of missing completely at random. 
Numeric, with \code{0 <= mcar_p <= 1};}
}
\value{
List with elements:
  \tabular{ll}{
    \code{mat}       \cr \tab Non-negative numeric matrix with \code{n_feats} rows and \code{n_obs} columns. \cr
    \code{feat_mean} \cr \tab Numeric vector of non-negative parameter means for each feature in \code{mat}. \cr
    \code{feat_cv}   \cr \tab Numeric vector of non-negative parameter CVs for each feature in \code{mat}. \cr
  }
}
\description{
Simulates non-negative data matrix with \code{n_genes * peps_per_gene} 
  rows and \code{(n_samps1 + n_samps2) * reps_per_sample} columns.
}
\details{
For \code{n_genes_signif} features out of \code{n_genes} will have a 50:50 chance 
    of an increase or a decrease. 
  For an increase, \code{mean2 <- mean1 * 2^(fold_change)}.
  For a decrease, \code{mean2 <- mean1 * 2^(-fold_change)}.
  Feature means: 
    \code{log(feature_mean) ~ rnorm(mean=log_m_mean, sd=log_m_sd)}.
  Dispersion of feature CVs: 
    \code{log(feature_cv) ~ rnorm(mean=log_cv_mean, sd=log_cv_sd)}.
  MNAR: \code{logit(p(mnar|log(m))) ~ mnar_c0 + mnar_c1 * log(m + mnar_off)}.
  For no MNAR, set \code{mnar_c0=-Inf, mnar_c1=0}.
  For no MCAR, set \code{mcar_p=0}.
}
\examples{
## default missing value settings:
rslt <- h0testr::f.sim2(n_samps1=3, n_samps2=3, n_genes=8, n_genes_signif=2)
print(rslt)

## no missing values:
rslt <- h0testr::f.sim2(n_samps1=3, n_samps2=3, n_genes=8, n_genes_signif=2, mnar_c0=-Inf, mnar_c1=0, mcar_p=0)
print(rslt)

## peptide-level, with technical replicate observations:
rslt <- h0testr::f.sim2(n_samps1=2, n_samps2=2, n_genes=8, reps_per_sample=2, peps_per_gene=3)
print(rslt)
}
