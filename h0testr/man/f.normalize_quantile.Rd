% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize.R
\name{f.normalize_quantile}
\alias{f.normalize_quantile}
\title{Normalize expression using selected quantile as scaling factor.}
\usage{
f.normalize_quantile(state, config, norm_quantile = NULL, multiplier = 1000)
}
\arguments{
\item{state}{List with elements formatted like the list returned by `f.read_data()`:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values.}

\item{norm_quantile}{Numeric in `0:1` specifying quantile to use.}

\item{multiplier}{Numeric used to scale returned values after 
dividing by selected quantile.}
}
\value{
A list (the processed state) with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
`f.normalize_quantile` normalizes expression using variant of quantile 
  normalization which excludes missing values.
}
\details{
Inter-observation normalization. Setting p to 0.5 is equivalent 
  to median scaling with median calculated after exclusion of missing 
  values. Similarly, setting p to 0.75 is upperquartile normalization 
  ignoring missing values.
}
\examples{
  \dontrun{
    state <- list(expression=exprs)
    config <- list(log_file="", norm_quantile=0.75)
    state <- f.normalize_quantile(state, config)
    norm_exprs <- state$expression

    config <- list(log_file="")
    state <- f.normalize_quantile(state, config, norm_quantile=0.75)
    norm_exprs <- state$expression
 }
}
