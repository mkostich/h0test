% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.R
\name{impute_unif_sample_lod}
\alias{impute_unif_sample_lod}
\title{Impute missing values between 0 and sample LOD}
\usage{
impute_unif_sample_lod(state, config, impute_quantile = NULL)
}
\arguments{
\item{state}{A list with elements like that returned by \code{read_data()}:
\tabular{ll}{
  \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
  \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
  \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
}}

\item{config}{List with configuration values. Uses the following keys:
\tabular{ll}{
  \code{impute_quantile}  \cr \tab Quantile of signal distribution to use as estimated limit of detection (LOD).
}}

\item{impute_quantile}{Numeric between 0 and 1 specifying 
minimum non-zero/\code{NA} expression value in each observation to use as the
observation-specific LOD (limit of detection). Default: \code{0}.}
}
\value{
An updated \code{state} list with the following elements:
  \tabular{ll}{
    \code{expression} \cr \tab Numeric matrix with non-negative expression values. \cr
    \code{features}   \cr \tab A data.frame with feature meta-data for rows of expression. \cr
    \code{samples}    \cr \tab A data.frame with observation meta-data for columns of expression. \cr
  }
}
\description{
Impute missing values by randomly drawing from uniform distribution below 
    an estimated observation-specific limit of detection (LOD).
}
\details{
Imputed values are random draws from uniform distribution over the 
  interval \code{[0, LOD]}, where LOD is an estimate observation limit of 
  detection. Only \code{NA} values are considered as missing, so if you 
  want \code{0} to be considered missing, and have \code{0} in the data, do 
  something like \code{exprs[exprs \%in\% 0] <- NA} prior to imputing.
  See documentation for \code{h0testr::new_config()} 
    for more detailed description of configuration parameters.
}
\examples{
set.seed(101)
exprs <- h0testr::sim1(n_obs=6, n_feats=12)$mat
exprs <- log2(exprs + 1)
feats <- data.frame(feature_id=rownames(exprs))
samps <- data.frame(observation_id=colnames(exprs))
state <- list(expression=exprs, features=feats, samples=samps)
config <- list(impute_quantile=0.05)
state2 <- h0testr::impute_unif_sample_lod(state, config)
summary(c(state$expression))   ## note number of NAs
summary(c(state2$expression))  ## note number of NAs
head(state$expression)
round(head(state2$expression))
}
